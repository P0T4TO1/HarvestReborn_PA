// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("AZURE_POSTGRES_URL")
  relationMode = "prisma"
}

model m_user {
  id       String @id @default(uuid())
  password String
  email    String @unique
  estado   Estado @default(ACTIVO)

  oAuthId String?

  emailVerified          Boolean @default(false)
  emailVerificationToken String? @unique

  resetPasswordToken   String?   @unique
  resetPasswordExpires DateTime?

  id_rol Int
  rol    c_rol @relation(fields: [id_rol], references: [id_rol])

  cliente       d_cliente?
  duenonegocio  d_duenonegocio?
  ticketSoporte m_ticketSoporte[]
  participantes d_participantes[]
  chat          m_chat[]
  mensajes      d_mensajes[]

  @@index([id_rol])
}

enum Estado {
  ACTIVO
  INACTIVO
  PENDIENTE
}

model c_rol {
  id_rol     Int    @id @default(autoincrement())
  nombre_rol String

  user m_user[]
}

model d_cliente {
  id_cliente        Int      @id @default(autoincrement())
  nombre_cliente    String
  apellidos_cliente String
  telefono_cliente  String
  fecha_nacimiento  DateTime
  nombre_negocio    String?
  direccion_negocio String?

  id_user   String       @unique
  user      m_user       @relation(fields: [id_user], references: [id], onDelete: Cascade)
  orden     d_orden[]
  historial c_historial?

  @@index([id_user])
}

model d_duenonegocio {
  id_dueneg        Int      @id @default(autoincrement())
  nombre_dueneg    String
  apellidos_dueneg String
  fecha_nacimiento DateTime

  id_user String @unique
  user    m_user @relation(fields: [id_user], references: [id], onDelete: Cascade)

  negocio m_negocio?

  @@index([id_user])
}

model m_negocio {
  id_negocio          Int      @id @default(autoincrement())
  nombre_negocio      String
  direccion_negocio   String
  telefono_negocio    String
  email_negocio       String?
  images_negocio      String[] @default([])
  descripcion_negocio String?
  estado_negocio      Estado   @default(PENDIENTE)

  id_dueneg Int            @unique
  dueneg    d_duenonegocio @relation(fields: [id_dueneg], references: [id_dueneg], onDelete: Cascade)

  historial     c_historial?
  inventario    c_inventario?
  ordenes       d_orden[]
  publicaciones m_publicaciones[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([id_dueneg])
}

model c_inventario {
  id_inventario Int @id @default(autoincrement())

  id_negocio Int       @unique
  negocio    m_negocio @relation(fields: [id_negocio], references: [id_negocio], onDelete: Cascade)

  lote m_lote[]
}

model m_lote {
  id_lote           Int      @id @default(autoincrement())
  cantidad_producto Int
  last_cantidad     Int?     @default(0)
  fecha_entrada     DateTime
  fecha_vencimiento DateTime
  precio_kg         Float
  last_precio_kg    Float?   @default(0)
  monto_total       Float
  last_monto_total  Float?   @default(0)
  dias_aviso        Int      @default(0)

  disponibilidad  Disponibilidad @default(EN_VENTA)
  estado_lote     EstadoLote     @default(ACTIVO)
  tipo_almacenaje TipoAlmacenaje @default(OTRO)

  id_inventario Int
  inventario    c_inventario @relation(fields: [id_inventario], references: [id_inventario], onDelete: Cascade)

  id_producto Int
  producto    m_producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade)

  id_proveedor Int?
  proveedor    c_proveedor? @relation(fields: [id_proveedor], references: [id_proveedor])

  id_publicacion Int?
  publicacion    m_publicaciones? @relation(fields: [id_publicacion], references: [id_publicacion])

  productoOrden m_prodcutoOrden[]

  @@index([id_inventario])
  @@index([id_producto])
  @@index([id_proveedor])
  @@index([id_publicacion])
}

enum EstadoLote {
  ACTIVO
  VENDIDO
  VENCIDO
  TERMINADO
}

enum Disponibilidad {
  EN_VENTA
  DONACION
  VENDIDO
  DONADO
}

enum TipoAlmacenaje {
  HUACAL
  BOLSA
  CAJA
  CANASTA
  OTRO
}

model m_producto {
  id_producto     Int       @id @default(autoincrement())
  nombre_producto String
  imagen_producto String
  descripcion     String?
  enTemporada     Boolean
  categoria       Categoria @default(VERDURA)

  lote          m_lote[]
  prodcutoOrden m_prodcutoOrden[]
}

enum Categoria {
  FRUTA
  VERDURA
}

model c_proveedor {
  id_proveedor       Int    @id @default(autoincrement())
  nombre_proveedor   String
  telefono_proveedor String
  email_proveedor    String

  lote m_lote[]
}

model m_prodcutoOrden {
  id_productoOrden Int   @id @default(autoincrement())
  cantidad_orden   Int
  monto            Float

  id_orden String?
  orden    d_orden? @relation(fields: [id_orden], references: [id_orden])

  id_producto Int
  producto    m_producto @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade)

  id_lote Int
  lote    m_lote @relation(fields: [id_lote], references: [id_lote], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([id_orden])
  @@index([id_producto])
  @@index([id_lote])
}

enum EstadoOrden {
  PENDIENTE
  EN_PROCESO
  RECHAZADO
  FINALIZADO
  CANCELADO
}

model d_orden {
  id_orden     String      @id @default(uuid())
  fecha_orden  DateTime
  hora_orden   DateTime
  monto_total  Float
  estado_orden EstadoOrden @default(PENDIENTE)

  id_cliente Int
  cliente    d_cliente @relation(fields: [id_cliente], references: [id_cliente])

  id_historial Int?
  historial    c_historial? @relation(fields: [id_historial], references: [id_historial])

  id_negocio Int
  negocio    m_negocio @relation(fields: [id_negocio], references: [id_negocio])

  productoOrden m_prodcutoOrden[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([id_cliente])
  @@index([id_historial])
  @@index([id_negocio])
}

model c_historial {
  id_historial Int @id @default(autoincrement())

  id_cliente Int?       @unique
  cliente    d_cliente? @relation(fields: [id_cliente], references: [id_cliente], onDelete: Cascade)

  id_negocio Int?       @unique
  negocio    m_negocio? @relation(fields: [id_negocio], references: [id_negocio], onDelete: Cascade)

  orden d_orden[]
}

enum EstadoTicket {
  PENDIENTE
  ACTIVO
  CERRADO
}

model m_ticketSoporte {
  id_ticket      Int          @id @default(autoincrement())
  nombre_usuario String
  descripcion    String
  images         String[]
  fecha_creacion DateTime
  fecha_cierre   DateTime
  estado_ticket  EstadoTicket @default(PENDIENTE)

  id_user String
  user    m_user @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@index([id_user])
}

model d_faqRespuestas {
  id_faqRespuesta Int @id @default(autoincrement())

  id_prefrec Int
  pregunta   c_preguntasFrecuentes @relation(fields: [id_prefrec], references: [id_prefrec])

  respuesta String

  @@index([id_prefrec])
}

model c_preguntasFrecuentes {
  id_prefrec Int @id @default(autoincrement())

  pregunta String

  respuestas d_faqRespuestas[]
  tipo       TipoPregunta      @default(GENERAL)
}

enum TipoPregunta {
  GENERAL
  CUENTA
  NEGOCIO
  CLIENTE
  DUENONEGOCIO
  ORDEN
  PRODUCTOS
  INVENTARIO
  CHAT
}

model d_participantes {
  id_participantes Int @id @default(autoincrement())

  id_user String
  user    m_user? @relation(fields: [id_user], references: [id], onDelete: Cascade)

  id_chat String
  chat    m_chat @relation(fields: [id_chat], references: [id_chat])

  @@index([id_user])
  @@index([id_chat])
}

model m_chat {
  id_chat        String   @id @default(uuid())
  nombre_chat    String
  fecha_creacion DateTime

  id_user_creator String
  user            m_user? @relation(fields: [id_user_creator], references: [id], onDelete: Cascade)

  participantes d_participantes[]
  mensajes      d_mensajes[]

  @@index([id_user_creator])
}

model d_mensajes {
  id_mensaje     String       @id @default(uuid())
  cuerpo_mensaje String       @db.VarChar(400)
  tipo_mensaje   tipo_mensaje @default(TEXTO)
  leido          Boolean      @default(false)
  createdAt      DateTime     @default(now())
  deletedAt      DateTime?

  id_chat String
  chat    m_chat? @relation(fields: [id_chat], references: [id_chat])

  id_user String
  user    m_user? @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@index([id_chat])
  @@index([id_user])
}

enum tipo_mensaje {
  TEXTO
  IMAGEN
  VIDEO
  AUDIO
  DOCUMENTO
}

model m_publicaciones {
  id_publicacion Int @id @default(autoincrement())

  id_negocio Int
  negocio    m_negocio @relation(fields: [id_negocio], references: [id_negocio], onDelete: Cascade)

  titulo_publicacion      String
  descripcion_publicacion String                    @db.VarChar(400)
  precio_publicacion      Float?
  images_publicacion      String[]                  @default([])
  disponibilidad          DisponibilidadPublicacion @default(EN_VENTA)
  estado_publicacion      EstadoPublicacion         @default(PENDIENTE)

  estado_general EstadoGeneral @default(PENDIENTE)

  lotes m_lote[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([id_negocio])
}

enum EstadoGeneral {
  ACTIVO
  INACTIVO
  PENDIENTE
}

enum EstadoPublicacion {
  PENDIENTE
  ACTIVO
  INACTIVO
  VENDIDO
  DONADO
}

enum DisponibilidadPublicacion {
  EN_VENTA
  DONACION
}
